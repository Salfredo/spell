group 'nl.thedocumentwizard.spell'
version artifactMajorVersion + '-' + artifactBuildNumber

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'antlr'
apply plugin: 'eclipse'

mainClassName = 'nl.thedocumentwizard.spell.Main'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.5.3" // use ANTLR version 3
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.mockito:mockito-core:2.+'
    // mandatory dependencies for using Spock
    testCompile "org.codehaus.groovy:groovy-all:2.4.7"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)

    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    compile group: 'org.glassfish.jaxb', name: 'txw2', version: '2.2.11'
}

task buildnumberplusone {
  Properties props = new Properties()
  File propsFile = new File('gradle.properties')
  props.load(propsFile.newDataInputStream())
  Integer nextbuildnum = ( ((props.getProperty('artifactBuildNumber')) as BigDecimal) + 1 )
  props.setProperty('artifactBuildNumber', nextbuildnum.toString())
  props.store(propsFile.newWriter(), null)
  props.load(propsFile.newDataInputStream())
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'nl.thedocumentwizard.spell.Main',
            'Implementation-Title': 'Spell',
            'Implementation-Version': version)
    }
}
