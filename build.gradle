plugins {
    id 'net.saliman.cobertura' version '2.4.0'
    id 'com.github.kt3k.coveralls' version '2.8.1'
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

group 'nl.thedocumentwizard.spell'

/*
 * Gets the version name from the latest Git tag
 */
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}
version getVersionName()

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'antlr'
apply plugin: 'eclipse'

mainClassName = 'nl.thedocumentwizard.spell.Main'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.5.3" // use ANTLR version 3
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.mockito:mockito-core:2.+'
    // mandatory dependencies for using Spock
    testCompile "org.codehaus.groovy:groovy-all:2.4.7"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)

    // https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime
    compile group: 'org.glassfish.jaxb', name: 'txw2', version: '2.2.11'
    // SLF4J not used, but needed for cobertura
    testRuntime "org.slf4j:slf4j-api:1.7.10"
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'nl.thedocumentwizard.spell.Main',
            'Implementation-Title': 'Spell',
            'Implementation-Version': version)
    }
}
