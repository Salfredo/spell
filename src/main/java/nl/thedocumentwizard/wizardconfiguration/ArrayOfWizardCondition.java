//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.04 at 06:05:10 PM CET 
//


package nl.thedocumentwizard.wizardconfiguration;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ArrayOfWizardCondition complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ArrayOfWizardCondition">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Condition" maxOccurs="unbounded" minOccurs="0">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;choice>
 *                     &lt;element name="Or" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}OrTrigger" minOccurs="0"/>
 *                     &lt;element name="Not" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}NotTrigger" minOccurs="0"/>
 *                     &lt;element name="RegEx" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}RegexTrigger" minOccurs="0"/>
 *                     &lt;element name="Empty" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}EmptyTrigger" minOccurs="0"/>
 *                     &lt;element name="Equal" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}EqualComparisonTrigger" minOccurs="0"/>
 *                     &lt;element name="Different" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}DifferentComparisonTrigger" minOccurs="0"/>
 *                     &lt;element name="GreaterOrEqualThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}GreaterOrEqualThanComparisonTrigger" minOccurs="0"/>
 *                     &lt;element name="GreaterThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}GreaterThanComparisonTrigger" minOccurs="0"/>
 *                     &lt;element name="LessOrEqualThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}LessOrEqualThanComparisonTrigger" minOccurs="0"/>
 *                     &lt;element name="LessThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}LessThanComparisonTrigger" minOccurs="0"/>
 *                     &lt;element name="And" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}AndTrigger" minOccurs="0"/>
 *                   &lt;/choice>
 *                 &lt;/sequence>
 *                 &lt;attribute name="nextStepID" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
 *                 &lt;attribute name="nextStepName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                 &lt;attribute name="nextStepGroupName" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ArrayOfWizardCondition", propOrder = {
    "condition"
})
public class ArrayOfWizardCondition {

    @XmlElement(name = "Condition")
    protected List<ArrayOfWizardCondition.Condition> condition;

    /**
     * Gets the value of the condition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the condition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ArrayOfWizardCondition.Condition }
     * 
     * 
     */
    public List<ArrayOfWizardCondition.Condition> getCondition() {
        if (condition == null) {
            condition = new ArrayList<ArrayOfWizardCondition.Condition>();
        }
        return this.condition;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;choice>
     *           &lt;element name="Or" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}OrTrigger" minOccurs="0"/>
     *           &lt;element name="Not" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}NotTrigger" minOccurs="0"/>
     *           &lt;element name="RegEx" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}RegexTrigger" minOccurs="0"/>
     *           &lt;element name="Empty" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}EmptyTrigger" minOccurs="0"/>
     *           &lt;element name="Equal" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}EqualComparisonTrigger" minOccurs="0"/>
     *           &lt;element name="Different" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}DifferentComparisonTrigger" minOccurs="0"/>
     *           &lt;element name="GreaterOrEqualThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}GreaterOrEqualThanComparisonTrigger" minOccurs="0"/>
     *           &lt;element name="GreaterThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}GreaterThanComparisonTrigger" minOccurs="0"/>
     *           &lt;element name="LessOrEqualThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}LessOrEqualThanComparisonTrigger" minOccurs="0"/>
     *           &lt;element name="LessThan" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}LessThanComparisonTrigger" minOccurs="0"/>
     *           &lt;element name="And" type="{http://www.thedocumentwizard.nl/wizardconfiguration/2.0}AndTrigger" minOccurs="0"/>
     *         &lt;/choice>
     *       &lt;/sequence>
     *       &lt;attribute name="nextStepID" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
     *       &lt;attribute name="nextStepName" type="{http://www.w3.org/2001/XMLSchema}string" />
     *       &lt;attribute name="nextStepGroupName" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "or",
        "not",
        "regEx",
        "empty",
        "equal",
        "different",
        "greaterOrEqualThan",
        "greaterThan",
        "lessOrEqualThan",
        "lessThan",
        "and"
    })
    public static class Condition {

        @XmlElement(name = "Or")
        protected OrTrigger or;
        @XmlElement(name = "Not")
        protected NotTrigger not;
        @XmlElement(name = "RegEx")
        protected RegexTrigger regEx;
        @XmlElement(name = "Empty")
        protected EmptyTrigger empty;
        @XmlElement(name = "Equal")
        protected EqualComparisonTrigger equal;
        @XmlElement(name = "Different")
        protected DifferentComparisonTrigger different;
        @XmlElement(name = "GreaterOrEqualThan")
        protected GreaterOrEqualThanComparisonTrigger greaterOrEqualThan;
        @XmlElement(name = "GreaterThan")
        protected GreaterThanComparisonTrigger greaterThan;
        @XmlElement(name = "LessOrEqualThan")
        protected LessOrEqualThanComparisonTrigger lessOrEqualThan;
        @XmlElement(name = "LessThan")
        protected LessThanComparisonTrigger lessThan;
        @XmlElement(name = "And")
        protected AndTrigger and;
        @XmlAttribute(name = "nextStepID", required = true)
        protected int nextStepID;
        @XmlAttribute(name = "nextStepName")
        protected String nextStepName;
        @XmlAttribute(name = "nextStepGroupName")
        protected String nextStepGroupName;

        /**
         * Gets the value of the or property.
         * 
         * @return
         *     possible object is
         *     {@link OrTrigger }
         *     
         */
        public OrTrigger getOr() {
            return or;
        }

        /**
         * Sets the value of the or property.
         * 
         * @param value
         *     allowed object is
         *     {@link OrTrigger }
         *     
         */
        public void setOr(OrTrigger value) {
            this.or = value;
        }

        /**
         * Gets the value of the not property.
         * 
         * @return
         *     possible object is
         *     {@link NotTrigger }
         *     
         */
        public NotTrigger getNot() {
            return not;
        }

        /**
         * Sets the value of the not property.
         * 
         * @param value
         *     allowed object is
         *     {@link NotTrigger }
         *     
         */
        public void setNot(NotTrigger value) {
            this.not = value;
        }

        /**
         * Gets the value of the regEx property.
         * 
         * @return
         *     possible object is
         *     {@link RegexTrigger }
         *     
         */
        public RegexTrigger getRegEx() {
            return regEx;
        }

        /**
         * Sets the value of the regEx property.
         * 
         * @param value
         *     allowed object is
         *     {@link RegexTrigger }
         *     
         */
        public void setRegEx(RegexTrigger value) {
            this.regEx = value;
        }

        /**
         * Gets the value of the empty property.
         * 
         * @return
         *     possible object is
         *     {@link EmptyTrigger }
         *     
         */
        public EmptyTrigger getEmpty() {
            return empty;
        }

        /**
         * Sets the value of the empty property.
         * 
         * @param value
         *     allowed object is
         *     {@link EmptyTrigger }
         *     
         */
        public void setEmpty(EmptyTrigger value) {
            this.empty = value;
        }

        /**
         * Gets the value of the equal property.
         * 
         * @return
         *     possible object is
         *     {@link EqualComparisonTrigger }
         *     
         */
        public EqualComparisonTrigger getEqual() {
            return equal;
        }

        /**
         * Sets the value of the equal property.
         * 
         * @param value
         *     allowed object is
         *     {@link EqualComparisonTrigger }
         *     
         */
        public void setEqual(EqualComparisonTrigger value) {
            this.equal = value;
        }

        /**
         * Gets the value of the different property.
         * 
         * @return
         *     possible object is
         *     {@link DifferentComparisonTrigger }
         *     
         */
        public DifferentComparisonTrigger getDifferent() {
            return different;
        }

        /**
         * Sets the value of the different property.
         * 
         * @param value
         *     allowed object is
         *     {@link DifferentComparisonTrigger }
         *     
         */
        public void setDifferent(DifferentComparisonTrigger value) {
            this.different = value;
        }

        /**
         * Gets the value of the greaterOrEqualThan property.
         * 
         * @return
         *     possible object is
         *     {@link GreaterOrEqualThanComparisonTrigger }
         *     
         */
        public GreaterOrEqualThanComparisonTrigger getGreaterOrEqualThan() {
            return greaterOrEqualThan;
        }

        /**
         * Sets the value of the greaterOrEqualThan property.
         * 
         * @param value
         *     allowed object is
         *     {@link GreaterOrEqualThanComparisonTrigger }
         *     
         */
        public void setGreaterOrEqualThan(GreaterOrEqualThanComparisonTrigger value) {
            this.greaterOrEqualThan = value;
        }

        /**
         * Gets the value of the greaterThan property.
         * 
         * @return
         *     possible object is
         *     {@link GreaterThanComparisonTrigger }
         *     
         */
        public GreaterThanComparisonTrigger getGreaterThan() {
            return greaterThan;
        }

        /**
         * Sets the value of the greaterThan property.
         * 
         * @param value
         *     allowed object is
         *     {@link GreaterThanComparisonTrigger }
         *     
         */
        public void setGreaterThan(GreaterThanComparisonTrigger value) {
            this.greaterThan = value;
        }

        /**
         * Gets the value of the lessOrEqualThan property.
         * 
         * @return
         *     possible object is
         *     {@link LessOrEqualThanComparisonTrigger }
         *     
         */
        public LessOrEqualThanComparisonTrigger getLessOrEqualThan() {
            return lessOrEqualThan;
        }

        /**
         * Sets the value of the lessOrEqualThan property.
         * 
         * @param value
         *     allowed object is
         *     {@link LessOrEqualThanComparisonTrigger }
         *     
         */
        public void setLessOrEqualThan(LessOrEqualThanComparisonTrigger value) {
            this.lessOrEqualThan = value;
        }

        /**
         * Gets the value of the lessThan property.
         * 
         * @return
         *     possible object is
         *     {@link LessThanComparisonTrigger }
         *     
         */
        public LessThanComparisonTrigger getLessThan() {
            return lessThan;
        }

        /**
         * Sets the value of the lessThan property.
         * 
         * @param value
         *     allowed object is
         *     {@link LessThanComparisonTrigger }
         *     
         */
        public void setLessThan(LessThanComparisonTrigger value) {
            this.lessThan = value;
        }

        /**
         * Gets the value of the and property.
         * 
         * @return
         *     possible object is
         *     {@link AndTrigger }
         *     
         */
        public AndTrigger getAnd() {
            return and;
        }

        /**
         * Sets the value of the and property.
         * 
         * @param value
         *     allowed object is
         *     {@link AndTrigger }
         *     
         */
        public void setAnd(AndTrigger value) {
            this.and = value;
        }

        /**
         * Gets the value of the nextStepID property.
         * 
         */
        public int getNextStepID() {
            return nextStepID;
        }

        /**
         * Sets the value of the nextStepID property.
         * 
         */
        public void setNextStepID(int value) {
            this.nextStepID = value;
        }

        /**
         * Gets the value of the nextStepName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNextStepName() {
            return nextStepName;
        }

        /**
         * Sets the value of the nextStepName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNextStepName(String value) {
            this.nextStepName = value;
        }

        /**
         * Gets the value of the nextStepGroupName property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getNextStepGroupName() {
            return nextStepGroupName;
        }

        /**
         * Sets the value of the nextStepGroupName property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setNextStepGroupName(String value) {
            this.nextStepGroupName = value;
        }

    }

}
